{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///donut-chart.min.js","webpack:///webpack/bootstrap a50d99167170c86934c6","webpack:///./index.js","webpack:///./src/donut-chart.js","webpack:///./src/utils.js"],"names":["root","factory","exports","module","define","amd","DonutChart","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","canvasId","option","x","y","radius","lineWidth","startAngle","title","show","text","textStyle","fontStyle","fontVariant","fontWeight","fontSize","lineHeight","fontFamily","color","subtext","subtextStyle","tooltip","backgroundColor","max","data","label","capType","selectedStyle","borderWidth","labelCoverTitle","backgroundArc","utils","extend","length","canvas","document","getElementById","width","height","ctx","getContext","circleX","formatPercent","circleY","rate","_typeof","Symbol","iterator","obj","constructor","drawArc","endAngle","beginPath","arc","angelToRadian","strokeStyle","stroke","closePath","drawTitle","titleFlag","save","textAlign","textBaseline","_totalLineHeight","formatPx","translate","font","fillStyle","fillText","measureText","restore","drawTip","param","_this2","rotate","default_font","totalHeigth","maxWidth","rowWidth","maxLineHeight","rowLineHeight","content","forEach","rowObj","key","rich","rect","fill","default_lineHeight","drawLabel","_this3","rowWidths","eval","join","halfHeight","startY","init","callback","_this4","lineCap","_this","_arcArray","_total","_lastAngel","item","index","value","type","sort","obj1","obj2","val1","val2","_arr","_num","toFixed","toString","slice","split","splice","percent","onmousemove","e","offsetX","offsetWidth","offsetY","offsetHeight","x2","y2","Math","sqrt","angle","atan2","PI","formatter","formatterToObject","class2type","hasOwn","support","indexOf","rowTexts","textObjs","test","element","str","replace","push","JSON","parse","error","isNaN","src","copyIsArray","copy","options","clone","target","arguments","deep","isFunction","isPlainObject","isArray","nodeType","isWindow","ownFirst","window"],"mappings":"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","file":"donut-chart.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DonutChart\"] = factory();\n\telse\n\t\troot[\"DonutChart\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DonutChart\"] = factory();\n\telse\n\t\troot[\"DonutChart\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(1);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = __webpack_require__(2);\n/**\r\n * @description 创建环形图\r\n * @author yangCJ\r\n * @param {object} option \r\n * @param {string} option.x 圆心横坐标 百分比\r\n * @param {string} option.y 圆心纵坐标 百分比\r\n * @param {string} radius 圆环半径 百分比\r\n * @param {string} lineWidth 圆环宽度 百分比\r\n * @param {number} startAngle 起始角度 0到360\r\n * @param {string} capType 圆弧拼接类型 \"round\"\r\n * @param {string} fontStyle 文本描述样式\r\n * @param {object} title 标题样式及位置\r\n * @param {object} tooltip 提示框的样式\r\n * @param {object} label 标签的样式及显示\r\n * @param {array} data 圆弧数据\r\n * @param {string} data[i].name 数据名称\r\n * @param {number} data[i].value 数据值\r\n * @param {object} selectedStyle 选中的圆弧样式\r\n * @param {string} selectedStyle.color 选中的圆弧边界颜色\r\n * @param {number} selectedStyle.borderWidth 选中的圆弧边界宽度\r\n * @param {array} color 圆弧的分配颜色\r\n * @param {string} backgroundArc 数值为空时的圆圈颜色\r\n */\nmodule.exports = DonutChart;\n\nfunction DonutChart(canvasId, option) {\n    this.option = {\n        x: \"50%\",\n        y: \"50%\",\n        radius: \"30%\",\n        lineWidth: \"5%\",\n        startAngle: 0,\n        title: {\n            show: true,\n            text: undefined,\n            textStyle: {\n                fontStyle: \"normal\",\n                fontVariant: \"normal\",\n                fontWeight: 'bold',\n                fontSize: \"24px\",\n                lineHeight: \"30px\",\n                fontFamily: 'Arial',\n                color: '#9f9f9f'\n            },\n            subtext: undefined,\n            subtextStyle: {\n                fontStyle: \"normal\",\n                fontVariant: \"normal\",\n                fontWeight: 'bold',\n                fontSize: \"24px\",\n                lineHeight: \"30px\",\n                fontFamily: 'Arial',\n                color: '#e53344'\n            },\n            x: '50%',\n            y: \"50%\"\n        },\n        tooltip: {\n            show: true,\n            fontStyle: \"normal\",\n            fontVariant: \"normal\",\n            fontWeight: 'normal',\n            fontSize: \"24px\",\n            lineHeight: \"30px\",\n            fontFamily: 'Arial',\n            color: 'white',\n            backgroundColor: '#00000099'\n        },\n        max: 100,\n        data: [],\n        label: {\n            show: true,\n            fontStyle: \"normal\",\n            fontVariant: \"normal\",\n            fontWeight: 'normal',\n            fontSize: \"24px\",\n            lineHeight: \"30px\",\n            fontFamily: 'Arial',\n            color: '#999'\n        },\n        capType: \"round\",\n        selectedStyle: {\n            color: \"white\",\n            borderWidth: 10\n        },\n        color: [\"#FF7F00\", \"#FFFF00 \", \"#00FF00 \", \"#00FFFF \", \"#0000FF\", \"#8B00FF\", \"#FF0000 \"],\n        labelCoverTitle: true,\n        backgroundArc: '#999'\n    };\n    this.option = utils.extend(true, this.option, option);\n    if (this.option.color.length < this.option.data.length) {\n        throw 'option.color 颜色少于 option.data';\n    }\n    this.canvas = document.getElementById(canvasId);\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.ctx = this.canvas.getContext('2d');\n    this.circleX = utils.formatPercent(option.x, \"option.x\") * this.width;\n    this.circleY = utils.formatPercent(option.y, \"option.x\") * this.height;\n    this.lineWidth = utils.formatPercent(option.lineWidth, 'option.lineWidth') * (this.width > this.height ? this.height : this.width);\n    this.label = option.label;\n    this.radius = utils.formatPercent(option.radius, 'option.radius') * (this.width > this.height ? this.height : this.width);\n    this.data = option.data;\n    this.color = option.color;\n    this.rate = this.canvas[this.width > this.height ? \"offsetHeight\" : \"offsetWidth\"] / this[this.width > this.height ? \"height\" : \"width\"];\n}\nDonutChart.prototype.drawArc = function (startAngle, endAngle, color, lineWidth) {\n\n    this.ctx.beginPath();\n    this.ctx.arc(0, 0, this.radius, utils.angelToRadian(startAngle), utils.angelToRadian(endAngle), false); // 坐标为90的圆，这里起始角度是0，结束角度是Math.PI*2\n    if (lineWidth) {\n        this.ctx.lineWidth = lineWidth;\n    }\n    this.ctx.strokeStyle = color;\n    this.ctx.stroke();\n    this.ctx.closePath();\n};\nDonutChart.prototype.drawTitle = function (titleFlag) {\n    if (!this.option.title.show) {\n        return false;\n    }\n    if (this.option.title && !titleFlag) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.textAlign = \"start\";\n        this.ctx.textBaseline = \"bottom\";\n        // 计算主标题和副标题行高总和\n        var _totalLineHeight = 0;\n        _totalLineHeight = utils.formatPx(this.option.title.textStyle.lineHeight, 'option.title.textStyle.lineHeight') + utils.formatPx(this.option.title.subtextStyle.lineHeight, 'option.title.subtextStyle.lineHeight');\n        this.ctx.translate(utils.formatPercent(this.option.title.x, 'option.title.x') * this.width, utils.formatPercent(this.option.title.y, 'option.title.y') * this.height - _totalLineHeight / 2);\n\n        // 主标题\n        if (this.option.title.text !== undefined) {\n            this.ctx.font = this.option.title.textStyle.fontStyle + \" \" + this.option.title.textStyle.fontVariant + \" \" + this.option.title.textStyle.fontWeight + \" \" + this.option.title.textStyle.fontSize + (this.option.title.textStyle.lineHeight ? \"/\" + this.option.title.textStyle.lineHeight : '') + \" \" + this.option.title.textStyle.fontFamily;\n            this.ctx.fillStyle = this.option.title.textStyle.color;\n\n            this.ctx.fillText(this.option.title.text, -this.ctx.measureText(this.option.title.text).width / 2, utils.formatPx(this.option.title.textStyle.lineHeight, 'option.title.textStyle.lineHeight'));\n        }\n\n        // 副标题\n        if (this.option.title.subtext !== undefined) {\n            this.ctx.font = this.option.title.subtextStyle.fontStyle + \" \" + this.option.title.subtextStyle.fontVariant + \" \" + this.option.title.subtextStyle.fontWeight + \" \" + this.option.title.subtextStyle.fontSize + (this.option.title.subtextStyle.lineHeight ? \"/\" + this.option.title.subtextStyle.lineHeight : '') + \" \" + this.option.title.subtextStyle.fontFamily;\n            this.ctx.fillStyle = this.option.title.subtextStyle.color;\n\n            this.ctx.fillText(this.option.title.subtext, -this.ctx.measureText(this.option.title.subtext).width / 2, utils.formatPx(this.option.title.textStyle.lineHeight, 'option.title.textStyle.lineHeight') + utils.formatPx(this.option.title.subtextStyle.lineHeight, 'option.title.subtextStyle.lineHeight'));\n        }\n        this.ctx.restore();\n    }\n};\nDonutChart.prototype.drawTip = function (param) {\n    var _this2 = this;\n\n    if (!this.option.tooltip.show) {\n        return false;\n    }\n    this.ctx.save();\n    this.ctx.rotate(utils.angelToRadian(90 + this.option.startAngle));\n    this.ctx.beginPath();\n    var default_font = this.option.tooltip.fontStyle + \" \" + this.option.tooltip.fontVariant + \" \" + this.option.tooltip.fontWeight + \" \" + this.option.tooltip.fontSize + (this.option.tooltip.lineHeight ? \"/\" + this.option.tooltip.lineHeight : '') + \" \" + this.option.tooltip.fontFamily;\n    this.ctx.font = default_font;\n    this.ctx.fillStyle = this.option.tooltip.color;\n    this.ctx.textAlign = \"start\";\n    this.ctx.textBaseline = \"bottom\";\n    // tip_back 需要知道 左上角（x,y）width （maxWidth 最长的一行宽度） 和 height(每一行的行高总和)\n    // 判定是含富文本的还是普通文本 (计算宽高的方式有所区别) 当有一个富文本的时候，则普通文本也会被包装成对象 所以可选像下面这样判断\n    var totalHeigth = 0;\n    var maxWidth = 0;\n    var rowWidth = 0;\n    var maxLineHeight = 0;\n    var rowLineHeight = [];\n    if (_typeof(param.content[0]) == \"object\") {\n        // 部分含有富文本的情况\n        // 分行 可以得到 本行我最大宽度 maxWidth \n        param.content.forEach(function (rowObj, i) {\n            rowWidth = 0;\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\n            for (var key in rowObj) {\n                var text = rowObj[key];\n\n                if (!_this2.option.tooltip.rich[key]) {\n                    _this2.option.tooltip.rich[key] = {};\n                }\n                var fontStyle = _this2.option.tooltip.rich[key].fontStyle ? _this2.option.tooltip.rich[key].fontStyle : _this2.option.tooltip.fontStyle;\n                var fontVariant = _this2.option.tooltip.rich[key].fontVariant ? _this2.option.tooltip.rich[key].fontVariant : _this2.option.tooltip.fontVariant;\n                var fontWeight = _this2.option.tooltip.rich[key].fontWeight ? _this2.option.tooltip.rich[key].fontWeight : _this2.option.tooltip.fontWeight;\n                var fontSize = _this2.option.tooltip.rich[key].fontSize ? _this2.option.tooltip.rich[key].fontSize : _this2.option.tooltip.fontSize;\n                var lineHeight = _this2.option.tooltip.rich[key].lineHeight ? _this2.option.tooltip.rich[key].lineHeight : _this2.option.tooltip.lineHeight;\n                var fontFamily = _this2.option.tooltip.rich[key].fontFamily ? _this2.option.tooltip.rich[key].fontFamily : _this2.option.tooltip.fontFamily;\n                _this2.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily;\n                _this2.ctx.fillStyle = _this2.option.tooltip.rich[key].color ? _this2.option.tooltip.rich[key].color : _this2.option.tooltip.color;\n                rowWidth += _this2.ctx.measureText(text).width;\n\n                if (utils.formatPx(lineHeight, 'option.tooltip.lineHeight') > maxLineHeight) {\n                    maxLineHeight = utils.formatPx(lineHeight, 'option.tooltip.lineHeight');\n                }\n            }\n            rowLineHeight[i] = maxLineHeight;\n            totalHeigth += maxLineHeight;\n            if (rowWidth > maxWidth) {\n                maxWidth = rowWidth;\n            }\n        });\n\n        // 画浮层\n        this.ctx.rect(param.x + 15, param.y + 10, maxWidth + 10, totalHeigth);\n        this.ctx.fillStyle = this.option.tooltip.backgroundColor;\n        this.ctx.fill();\n        // 填写文字\n        totalHeigth = 0;\n        param.content.forEach(function (rowObj, i) {\n            rowWidth = 0;\n            maxLineHeight = rowLineHeight[i];\n            totalHeigth += maxLineHeight;\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\n            for (var key in rowObj) {\n                var text = rowObj[key];\n\n                if (!_this2.option.tooltip.rich[key]) {\n                    _this2.option.tooltip.rich[key] = {};\n                }\n                var fontStyle = _this2.option.tooltip.rich[key].fontStyle ? _this2.option.tooltip.rich[key].fontStyle : _this2.option.tooltip.fontStyle;\n                var fontVariant = _this2.option.tooltip.rich[key].fontVariant ? _this2.option.tooltip.rich[key].fontVariant : _this2.option.tooltip.fontVariant;\n                var fontWeight = _this2.option.tooltip.rich[key].fontWeight ? _this2.option.tooltip.rich[key].fontWeight : _this2.option.tooltip.fontWeight;\n                var fontSize = _this2.option.tooltip.rich[key].fontSize ? _this2.option.tooltip.rich[key].fontSize : _this2.option.tooltip.fontSize;\n                var lineHeight = _this2.option.tooltip.rich[key].lineHeight ? _this2.option.tooltip.rich[key].lineHeight : _this2.option.tooltip.lineHeight;\n                var fontFamily = _this2.option.tooltip.rich[key].fontFamily ? _this2.option.tooltip.rich[key].fontFamily : _this2.option.tooltip.fontFamily;\n                _this2.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily;\n                _this2.ctx.fillStyle = _this2.option.tooltip.rich[key].color ? _this2.option.tooltip.rich[key].color : _this2.option.tooltip.color;\n\n                _this2.ctx.fillText(text, param.x + 20 + rowWidth, param.y + 10 + totalHeigth);\n\n                rowWidth += _this2.ctx.measureText(text).width;\n            }\n        });\n    } else {\n        // 普通文字\n        var default_lineHeight = this.option.tooltip.lineHeight;\n        param.content.forEach(function (text, i) {\n            totalHeigth += utils.formatPx(default_lineHeight, 'option.tooltip.lineHeight or option.tooltip.rich[].lineHeight');\n            rowWidth = _this2.ctx.measureText(text).width;\n            if (rowWidth > maxWidth) {\n                maxWidth = rowWidth;\n            }\n        });\n        this.ctx.rect(param.x - 5, param.y, maxWidth + 10, totalHeigth);\n        this.ctx.fillStyle = '#00000088';\n        this.ctx.fill();\n        // 画完底部浮层 填上文字\n        this.ctx.fillStyle = this.option.tooltip.color;\n        totalHeigth = 0;\n        param.content.forEach(function (text, i) {\n            totalHeigth += utils.formatPx(default_lineHeight, 'option.tooltip.lineHeight  or option.tooltip.rich[].lineHeight');\n            _this2.ctx.fillText(text, param.x, param.y + totalHeigth);\n        });\n    }\n\n    this.ctx.restore();\n};\nDonutChart.prototype.drawLabel = function (content) {\n    var _this3 = this;\n\n    if (!this.option.label.show) {\n        return false;\n    }\n    this.ctx.save();\n    this.ctx.rotate(utils.angelToRadian(90 + this.option.startAngle));\n    this.ctx.beginPath();\n    var default_font = this.option.label.fontStyle + \" \" + this.option.label.fontVariant + \" \" + this.option.label.fontWeight + \" \" + this.option.label.fontSize + (this.option.label.lineHeight ? \"/\" + this.option.label.lineHeight : '') + \" \" + this.option.label.fontFamily;\n    this.ctx.font = default_font;\n    this.ctx.fillStyle = this.option.label.color;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"bottom\";\n    // tip_back 需要知道 左上角（x,y）width （maxWidth 最长的一行宽度） 和 height(每一行的行高总和)\n    // 判定是含富文本的还是普通文本 (计算宽高的方式有所区别) 当有一个富文本的时候，则普通文本也会被包装成对象 所以可选像下面这样判断\n    var totalHeigth = 0;\n    var rowWidth = 0;\n    var maxWidth = 0;\n    var maxLineHeight = 0;\n    var rowLineHeight = [];\n    var rowWidths = [];\n    if (_typeof(content[0]) == \"object\") {\n        // 部分含有富文本的情况\n        // 分行 可以得到 本行最大宽度 maxWidth \n        content.forEach(function (rowObj, i) {\n            rowWidth = 0;\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\n            for (var key in rowObj) {\n                var text = rowObj[key];\n\n                if (!_this3.option.label.rich[key]) {\n                    _this3.option.label.rich[key] = {};\n                }\n                var fontStyle = _this3.option.label.rich[key].fontStyle ? _this3.option.label.rich[key].fontStyle : _this3.option.label.fontStyle;\n                var fontVariant = _this3.option.label.rich[key].fontVariant ? _this3.option.label.rich[key].fontVariant : _this3.option.label.fontVariant;\n                var fontWeight = _this3.option.label.rich[key].fontWeight ? _this3.option.label.rich[key].fontWeight : _this3.option.label.fontWeight;\n                var fontSize = _this3.option.label.rich[key].fontSize ? _this3.option.label.rich[key].fontSize : _this3.option.label.fontSize;\n                var lineHeight = _this3.option.label.rich[key].lineHeight ? _this3.option.label.rich[key].lineHeight : _this3.option.label.lineHeight;\n                var fontFamily = _this3.option.label.rich[key].fontFamily ? _this3.option.label.rich[key].fontFamily : _this3.option.label.fontFamily;\n                _this3.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily;\n                _this3.ctx.fillStyle = _this3.option.label.rich[key].color ? _this3.option.label.rich[key].color : _this3.option.label.color;\n                rowWidth += _this3.ctx.measureText(text).width;\n\n                if (utils.formatPx(lineHeight, 'option.label.lineHeight or option.label.rich[].lineHeight') > maxLineHeight) {\n                    maxLineHeight = utils.formatPx(lineHeight, 'option.label.lineHeight or option.label.rich[].lineHeight');\n                }\n            }\n            rowLineHeight[i] = maxLineHeight;\n            rowWidths[i] = rowWidth;\n            if (rowWidth > maxWidth) {\n                maxWidth = rowWidth;\n            }\n        });\n\n        // 填写文字\n        this.ctx.translate(0, -eval(rowLineHeight.join(\"+\")) / 2);\n        totalHeigth = 0;\n        content.forEach(function (rowObj, i) {\n\n            _this3.ctx.save();\n            _this3.ctx.translate(-rowWidths[i] / 2, 0);\n            _this3.ctx.textAlign = \"start\";\n            rowWidth = 0;\n            maxLineHeight = rowLineHeight[i];\n            totalHeigth += maxLineHeight;\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\n            for (var key in rowObj) {\n                var text = rowObj[key];\n\n                if (!_this3.option.label.rich[key]) {\n                    _this3.option.label.rich[key] = {};\n                }\n                var fontStyle = _this3.option.label.rich[key].fontStyle ? _this3.option.label.rich[key].fontStyle : _this3.option.label.fontStyle;\n                var fontVariant = _this3.option.label.rich[key].fontVariant ? _this3.option.label.rich[key].fontVariant : _this3.option.label.fontVariant;\n                var fontWeight = _this3.option.label.rich[key].fontWeight ? _this3.option.label.rich[key].fontWeight : _this3.option.label.fontWeight;\n                var fontSize = _this3.option.label.rich[key].fontSize ? _this3.option.label.rich[key].fontSize : _this3.option.label.fontSize;\n                var lineHeight = _this3.option.label.rich[key].lineHeight ? _this3.option.label.rich[key].lineHeight : _this3.option.label.lineHeight;\n                var fontFamily = _this3.option.label.rich[key].fontFamily ? _this3.option.label.rich[key].fontFamily : _this3.option.label.fontFamily;\n                _this3.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily;\n                _this3.ctx.fillStyle = _this3.option.label.rich[key].color ? _this3.option.label.rich[key].color : _this3.option.label.color;\n\n                _this3.ctx.fillText(text, rowWidth, totalHeigth);\n                rowWidth += _this3.ctx.measureText(text).width;\n            }\n\n            _this3.ctx.restore();\n        });\n    } else {\n        // 普通文字\n        var default_lineHeight = this.option.label.lineHeight;\n        content.forEach(function (text, i) {\n            totalHeigth += utils.formatPx(default_lineHeight, 'option.label.lineHeight');\n            rowWidth = _this3.ctx.measureText(text).width;\n            if (rowWidth > maxWidth) {\n                maxWidth = rowWidth;\n            }\n        });\n        // 半总高 \n        var halfHeight = totalHeigth / 2;\n        // 起始y\n        var startY = halfHeight - utils.formatPx(default_lineHeight, 'option.label.lineHeight');\n\n        this.ctx.fillStyle = this.option.label.color;\n        totalHeigth = 0;\n        content.forEach(function (text, i) {\n            _this3.ctx.fillText(text, 0, -startY + totalHeigth);\n            totalHeigth += utils.formatPx(default_lineHeight, 'option.label.lineHeight');\n        });\n    }\n\n    this.ctx.restore();\n};\nDonutChart.prototype.init = function (callback, titleFlag) {\n    var _this4 = this;\n\n    if (callback && typeof callback != 'function') {\n        throw 'init() 第一个参数必须是函数';\n    }\n    if (titleFlag && typeof titleFlag != 'boolean') {\n        throw 'labelCoverTitle 必须是boolean';\n    }\n    this.canvas.width = this.canvas.width;\n    this.drawTitle(titleFlag);\n    this.ctx.translate(this.circleX, this.circleY);\n\n    this.ctx.rotate(utils.angelToRadian(-90 + this.option.startAngle));\n    this.ctx.lineWidth = this.lineWidth;\n    this.ctx.lineCap = this.option.capType;\n    var _this = this,\n        _arcArray = [],\n        _total = 0,\n        _lastAngel = 0;\n\n    this.data.forEach(function (item, index) {\n        _total += item.value;\n        item.color = item.color || _this4.color[index];\n    });\n    if (_total == 0) {\n        this.drawArc(0, 360, this.option.backgroundArc);\n        return false;\n    }\n    if (this.option.type == \"gauge\") {\n        if (this.option.data[0].value > 100) {\n            throw 'this.option.data 里的 value 值不能大于100';\n            return false;\n        }\n        _total = this.option.max;\n        this.drawArc(0, 360, this.option.backgroundArc);\n    }\n\n    this.data.sort(function (obj1, obj2) {\n        var val1 = obj1.value;\n        var val2 = obj2.value;\n        if (val1 > val2) {\n            return 1;\n        } else if (val1 < val2) {\n            return -1;\n        } else {\n            return 0;\n        }\n    });\n\n    this.data.forEach(function (item, index) {\n        var _arr, _num;\n        if (item.value / _total == 1) {\n            _num = '100';\n        } else {\n            _arr = (item.value / _total).toFixed(4).toString().slice(2).split('');\n            _arr.splice(2, 0, '.');\n            _num = _arr.join('');\n        }\n\n        _arcArray[index] = {\n            index: index,\n            name: item.name,\n            value: item.value,\n            startAngle: _lastAngel,\n            endAngle: item.value / _total * 360 + _lastAngel,\n            percent: _num + '%',\n            color: item.color\n        };\n        _lastAngel = _arcArray[index].endAngle;\n    });\n\n    _arcArray.forEach(function (item, index) {\n        _this4.drawArc(item.startAngle, item.endAngle, item.color);\n    });\n\n    for (var i = 0, l = _arcArray.length; i < l; i++) {\n        if (_arcArray[i].value != 0) {\n            this.drawArc(_arcArray[i].startAngle, _arcArray[i].startAngle + 0.1, _arcArray[i].color);\n        }\n    }\n\n    // 绑定事件\n    this.canvas.onmousemove = function (e) {\n\n        var x = e.offsetX - this.offsetWidth / 2;\n        var y = e.offsetY - this.offsetHeight / 2;\n        var x2 = x * x;\n        var y2 = y * y;\n        // 选中圆环\n        if (Math.sqrt(x2 + y2) > (_this.radius - _this.lineWidth) * _this.rate && Math.sqrt(x2 + y2) < (_this.radius + _this.lineWidth) * _this.rate) {\n            var angle = Math.atan2(x, -y) / (Math.PI / 180) > 0 ? Math.atan2(x, -y) / (Math.PI / 180) : 360 + Math.atan2(x, -y) / (Math.PI / 180);\n            // 选中某段，显示某段\n\n            for (var i = 0, l = _arcArray.length; i < l; i++) {\n                if (angle < _arcArray[i].endAngle) {\n                    _this.init(callback, _this.option.labelCoverTitle);\n\n                    _this.drawArc(_arcArray[i].startAngle, _arcArray[i].endAngle, _this.option.selectedStyle.color, _this.option.selectedStyle.borderWidth + _this.lineWidth);\n                    _this.drawArc(_arcArray[i].startAngle, _arcArray[i].endAngle, _arcArray[i].color, _this.lineWidth);\n\n                    // show label\n                    var content = [];\n                    if (typeof _this.option.label.formatter == \"function\") {\n                        content = utils.formatterToObject(_this.option.label.formatter(_arcArray[i]));\n                    } else {\n                        content = [_arcArray[i].name, _arcArray[i].value];\n                    }\n                    _this.drawLabel(content);\n                    content = [];\n                    if (typeof _this.option.tooltip.formatter == \"function\") {\n                        content = utils.formatterToObject(_this.option.tooltip.formatter(_arcArray[i]));\n                    } else {\n                        content = [_arcArray[i].name, _arcArray[i].value];\n                    }\n                    // show tip\n                    _this.drawTip({\n                        x: x / _this.rate,\n                        y: y / _this.rate,\n                        content: content\n                    });\n\n                    callback(_arcArray[i]);\n                    break;\n                } else {\n                    _this.init(callback);\n                }\n            }\n        } else {\n            _this.init(callback);\n        }\n    };\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar class2type = {};\nvar toString = class2type.toString;\nvar hasOwn = class2type.hasOwnProperty;\nvar support = {};\nmodule.exports = {\n    // 百分比字符串转小数\n    formatPercent: function formatPercent(param, name) {\n        if (typeof param == 'string' && param.indexOf('%') == param.length - 1) {\n            return param.slice(0, -1) / 100;\n        }\n        throw name + \" 参数格式错误\";\n    },\n\n    // 字体大小字符串去px\n    formatPx: function formatPx(param, name) {\n        if (typeof param == 'string' && param.indexOf('px') == param.length - 2) {\n            return +param.slice(0, -2);\n        }\n        throw name + \" 参数格式错误\";\n    },\n\n    // 富文本格式\"{a|水电费}\"=》 object {a:水电费}\n    formatterToObject: function formatterToObject(param) {\n\n        if (param === undefined) {\n            return false;\n        }\n        if (typeof param != \"string\") {\n            throw \"formatter 必须返回一个字符串\";\n        }\n        try {\n            var rowTexts = param.split('\\n');\n            var textObjs = [];\n            // 富文本格式\n\n            if (/\\{(\\w+)\\|([\\s\\S]*?)\\}/g.test(param)) {\n                rowTexts.forEach(function (element, index) {\n\n                    var str = '';\n                    var arr = element.replace(/\\{(\\w+)\\|([\\s\\S]*?)\\}/g, ',\"$1\":\"$2\",').split(',');\n\n                    arr.forEach(function (e, i) {\n                        if (e.indexOf(':') > -1) {\n                            str += e + ',';\n                        } else {\n                            str += '\"default_' + i + '\":\"' + e + '\",';\n                        }\n                    });\n\n                    // 得到要渲染的对象\n                    textObjs.push(JSON.parse(\"{\" + str.slice(0, -1) + \"}\"));\n                });\n                // 普通格式\n            } else {\n                rowTexts.forEach(function (element) {\n                    textObjs.push(element);\n                });\n            }\n            return textObjs;\n        } catch (error) {\n            throw \"formatter 的格式不正确\";\n        }\n    },\n\n\n    // 角度转弧度\n    angelToRadian: function angelToRadian(param, name) {\n        if (isNaN(param)) {\n            throw name + '不是一个有效数字';\n        }\n        return param * Math.PI / 180;\n    },\n    extend: function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false;\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n\n        if (i === length) {\n            target = this;\n            i--;\n        }\n\n        for (; i < length; i++) {\n\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        } else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    },\n    isFunction: function isFunction(param) {\n        return typeof param == 'function';\n    },\n    isPlainObject: function isPlainObject(obj) {\n        var key;\n\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n\n        try {\n\n            // Not own constructor property must be Object\n            if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n        } catch (e) {\n\n            // IE8,9 Will throw exceptions on certain host objects #9897\n            return false;\n        }\n\n        // Support: IE<9\n        // Handle iteration over inherited properties before own properties.\n        if (!support.ownFirst) {\n            for (key in obj) {\n                return hasOwn.call(obj, key);\n            }\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        for (key in obj) {}\n\n        return key === undefined || hasOwn.call(obj, key);\n    },\n    type: function type(obj) {\n        if (obj == null) {\n            return obj + \"\";\n        }\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    },\n    isWindow: function isWindow(obj) {\n        /* jshint eqeqeq: false */\n        return obj != null && obj == obj.window;\n    },\n    isArray: function isArray(obj) {\n        return this.type(obj) === \"array\";\n    }\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// donut-chart.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a50d99167170c86934c6","module.exports = require('./src/donut-chart');\n\n\n// WEBPACK FOOTER //\n// ./index.js","const utils = require('./utils')\r\n/**\r\n * @description 创建环形图\r\n * @author yangCJ\r\n * @param {object} option \r\n * @param {string} option.x 圆心横坐标 百分比\r\n * @param {string} option.y 圆心纵坐标 百分比\r\n * @param {string} radius 圆环半径 百分比\r\n * @param {string} lineWidth 圆环宽度 百分比\r\n * @param {number} startAngle 起始角度 0到360\r\n * @param {string} capType 圆弧拼接类型 \"round\"\r\n * @param {string} fontStyle 文本描述样式\r\n * @param {object} title 标题样式及位置\r\n * @param {object} tooltip 提示框的样式\r\n * @param {object} label 标签的样式及显示\r\n * @param {array} data 圆弧数据\r\n * @param {string} data[i].name 数据名称\r\n * @param {number} data[i].value 数据值\r\n * @param {object} selectedStyle 选中的圆弧样式\r\n * @param {string} selectedStyle.color 选中的圆弧边界颜色\r\n * @param {number} selectedStyle.borderWidth 选中的圆弧边界宽度\r\n * @param {array} color 圆弧的分配颜色\r\n * @param {string} backgroundArc 数值为空时的圆圈颜色\r\n */\r\nmodule.exports = DonutChart\r\n\r\nfunction DonutChart(canvasId, option) {\r\n    this.option = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        radius: \"30%\",\r\n        lineWidth: \"5%\",\r\n        startAngle: 0,\r\n        title: {\r\n            show: true,\r\n            text: undefined,\r\n            textStyle: {\r\n                fontStyle: \"normal\",\r\n                fontVariant: \"normal\",\r\n                fontWeight: 'bold',\r\n                fontSize: \"24px\",\r\n                lineHeight: \"30px\",\r\n                fontFamily: 'Arial',\r\n                color: '#9f9f9f',\r\n            },\r\n            subtext: undefined,\r\n            subtextStyle: {\r\n                fontStyle: \"normal\",\r\n                fontVariant: \"normal\",\r\n                fontWeight: 'bold',\r\n                fontSize: \"24px\",\r\n                lineHeight: \"30px\",\r\n                fontFamily: 'Arial',\r\n                color: '#e53344'\r\n            },\r\n            x: '50%',\r\n            y: \"50%\",\r\n        },\r\n        tooltip: {\r\n            show: true,\r\n            fontStyle: \"normal\",\r\n            fontVariant: \"normal\",\r\n            fontWeight: 'normal',\r\n            fontSize: \"24px\",\r\n            lineHeight: \"30px\",\r\n            fontFamily: 'Arial',\r\n            color: 'white',\r\n            backgroundColor: '#00000099'\r\n        },\r\n        max:100,\r\n        data: [],\r\n        label: {\r\n            show: true,\r\n            fontStyle: \"normal\",\r\n            fontVariant: \"normal\",\r\n            fontWeight: 'normal',\r\n            fontSize: \"24px\",\r\n            lineHeight: \"30px\",\r\n            fontFamily: 'Arial',\r\n            color: '#999'\r\n        },\r\n        capType: \"round\",\r\n        selectedStyle: {\r\n            color: \"white\",\r\n            borderWidth: 10\r\n        },\r\n        color: [\"#FF7F00\", \"#FFFF00 \", \"#00FF00 \", \"#00FFFF \", \"#0000FF\", \"#8B00FF\", \"#FF0000 \"],\r\n        labelCoverTitle: true,\r\n        backgroundArc: '#999'\r\n    }\r\n    this.option = utils.extend(true, this.option, option)\r\n    if (this.option.color.length < this.option.data.length) {\r\n        throw 'option.color 颜色少于 option.data'\r\n    }\r\n    this.canvas = document.getElementById(canvasId);\r\n    this.width = this.canvas.width\r\n    this.height = this.canvas.height\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.circleX = utils.formatPercent(option.x, \"option.x\") * this.width\r\n    this.circleY = utils.formatPercent(option.y, \"option.x\") * this.height\r\n    this.lineWidth = utils.formatPercent(option.lineWidth, 'option.lineWidth') * (this.width > this.height ? this.height : this.width)\r\n    this.label = option.label\r\n    this.radius = utils.formatPercent(option.radius, 'option.radius') * (this.width > this.height ? this.height : this.width)\r\n    this.data = option.data\r\n    this.color = option.color\r\n    this.rate = this.canvas[this.width > this.height ? \"offsetHeight\" : \"offsetWidth\"] / this[this.width > this.height ? \"height\" : \"width\"]\r\n}\r\nDonutChart.prototype.drawArc = function (startAngle, endAngle, color, lineWidth) {\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(0, 0, this.radius, utils.angelToRadian(startAngle), utils.angelToRadian(endAngle), false); // 坐标为90的圆，这里起始角度是0，结束角度是Math.PI*2\r\n    if (lineWidth) {\r\n        this.ctx.lineWidth = lineWidth\r\n    }\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n};\r\nDonutChart.prototype.drawTitle = function (titleFlag) {\r\n    if (!this.option.title.show) {\r\n        return false;\r\n    }\r\n    if (this.option.title && !titleFlag) {\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        this.ctx.textAlign = \"start\";\r\n        this.ctx.textBaseline = \"bottom\";\r\n        // 计算主标题和副标题行高总和\r\n        var _totalLineHeight = 0 \r\n        _totalLineHeight = utils.formatPx(this.option.title.textStyle.lineHeight,'option.title.textStyle.lineHeight') + utils.formatPx(this.option.title.subtextStyle.lineHeight,'option.title.subtextStyle.lineHeight')\r\n        this.ctx.translate(utils.formatPercent(this.option.title.x,'option.title.x') * this.width, utils.formatPercent(this.option.title.y,'option.title.y') * this.height-_totalLineHeight/2);\r\n\r\n\r\n        // 主标题\r\n        if (this.option.title.text !== undefined) {\r\n            this.ctx.font = this.option.title.textStyle.fontStyle + \" \" + this.option.title.textStyle.fontVariant + \" \" + this.option.title.textStyle.fontWeight + \" \" + this.option.title.textStyle.fontSize + (this.option.title.textStyle.lineHeight ? \"/\" + this.option.title.textStyle.lineHeight : '') + \" \" + this.option.title.textStyle.fontFamily\r\n            this.ctx.fillStyle = this.option.title.textStyle.color;\r\n            \r\n            this.ctx.fillText(this.option.title.text,-this.ctx.measureText(this.option.title.text).width/2,utils.formatPx(this.option.title.textStyle.lineHeight,'option.title.textStyle.lineHeight'));\r\n        }\r\n\r\n        // 副标题\r\n        if (this.option.title.subtext !== undefined) {\r\n            this.ctx.font = this.option.title.subtextStyle.fontStyle + \" \" + this.option.title.subtextStyle.fontVariant + \" \" + this.option.title.subtextStyle.fontWeight + \" \" + this.option.title.subtextStyle.fontSize + (this.option.title.subtextStyle.lineHeight ? \"/\" + this.option.title.subtextStyle.lineHeight : '') + \" \" + this.option.title.subtextStyle.fontFamily\r\n            this.ctx.fillStyle = this.option.title.subtextStyle.color;\r\n            \r\n            this.ctx.fillText(this.option.title.subtext,-this.ctx.measureText(this.option.title.subtext).width/2,utils.formatPx(this.option.title.textStyle.lineHeight,'option.title.textStyle.lineHeight')+utils.formatPx(this.option.title.subtextStyle.lineHeight,'option.title.subtextStyle.lineHeight'));\r\n        }\r\n        this.ctx.restore();        \r\n    }\r\n}\r\nDonutChart.prototype.drawTip = function (param) {\r\n    if (!this.option.tooltip.show) {\r\n        return false;\r\n    }\r\n    this.ctx.save()\r\n    this.ctx.rotate(utils.angelToRadian(90 + this.option.startAngle))\r\n    this.ctx.beginPath();\r\n    var default_font = this.option.tooltip.fontStyle + \" \" + this.option.tooltip.fontVariant + \" \" + this.option.tooltip.fontWeight + \" \" + this.option.tooltip.fontSize + (this.option.tooltip.lineHeight ? \"/\" + this.option.tooltip.lineHeight : '') + \" \" + this.option.tooltip.fontFamily\r\n    this.ctx.font = default_font\r\n    this.ctx.fillStyle = this.option.tooltip.color;\r\n    this.ctx.textAlign = \"start\";\r\n    this.ctx.textBaseline = \"bottom\";\r\n    // tip_back 需要知道 左上角（x,y）width （maxWidth 最长的一行宽度） 和 height(每一行的行高总和)\r\n    // 判定是含富文本的还是普通文本 (计算宽高的方式有所区别) 当有一个富文本的时候，则普通文本也会被包装成对象 所以可选像下面这样判断\r\n    var totalHeigth = 0;\r\n    var maxWidth = 0;\r\n    var rowWidth = 0;\r\n    var maxLineHeight = 0;\r\n    var rowLineHeight = []\r\n    if (typeof param.content[0] == \"object\") {\r\n        // 部分含有富文本的情况\r\n        // 分行 可以得到 本行我最大宽度 maxWidth \r\n        param.content.forEach((rowObj, i) => {\r\n            rowWidth = 0;\r\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\r\n            for (const key in rowObj) {\r\n                var text = rowObj[key]\r\n\r\n                if (!this.option.tooltip.rich[key]) {\r\n                    this.option.tooltip.rich[key] = {}\r\n                }\r\n                let fontStyle = this.option.tooltip.rich[key].fontStyle ? this.option.tooltip.rich[key].fontStyle : this.option.tooltip.fontStyle\r\n                let fontVariant = this.option.tooltip.rich[key].fontVariant ? this.option.tooltip.rich[key].fontVariant : this.option.tooltip.fontVariant\r\n                let fontWeight = this.option.tooltip.rich[key].fontWeight ? this.option.tooltip.rich[key].fontWeight : this.option.tooltip.fontWeight\r\n                let fontSize = this.option.tooltip.rich[key].fontSize ? this.option.tooltip.rich[key].fontSize : this.option.tooltip.fontSize\r\n                let lineHeight = this.option.tooltip.rich[key].lineHeight ? this.option.tooltip.rich[key].lineHeight : this.option.tooltip.lineHeight\r\n                let fontFamily = this.option.tooltip.rich[key].fontFamily ? this.option.tooltip.rich[key].fontFamily : this.option.tooltip.fontFamily\r\n                this.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily\r\n                this.ctx.fillStyle = this.option.tooltip.rich[key].color ? this.option.tooltip.rich[key].color : this.option.tooltip.color;\r\n                rowWidth += this.ctx.measureText(text).width\r\n\r\n                if (utils.formatPx(lineHeight,'option.tooltip.lineHeight') > maxLineHeight) {\r\n                    maxLineHeight = utils.formatPx(lineHeight,'option.tooltip.lineHeight')\r\n                }\r\n            }\r\n            rowLineHeight[i] = maxLineHeight\r\n            totalHeigth += maxLineHeight\r\n            if (rowWidth > maxWidth) {\r\n                maxWidth = rowWidth\r\n            }\r\n        })\r\n\r\n        // 画浮层\r\n        this.ctx.rect(param.x + 15, param.y+10, maxWidth + 10, totalHeigth);\r\n        this.ctx.fillStyle = this.option.tooltip.backgroundColor;\r\n        this.ctx.fill();\r\n        // 填写文字\r\n        totalHeigth = 0;\r\n        param.content.forEach((rowObj, i) => {\r\n            rowWidth = 0;\r\n            maxLineHeight = rowLineHeight[i]\r\n            totalHeigth += maxLineHeight\r\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\r\n            for (const key in rowObj) {\r\n                var text = rowObj[key]\r\n\r\n                if (!this.option.tooltip.rich[key]) {\r\n                    this.option.tooltip.rich[key] = {}\r\n                }\r\n                let fontStyle = this.option.tooltip.rich[key].fontStyle ? this.option.tooltip.rich[key].fontStyle : this.option.tooltip.fontStyle\r\n                let fontVariant = this.option.tooltip.rich[key].fontVariant ? this.option.tooltip.rich[key].fontVariant : this.option.tooltip.fontVariant\r\n                let fontWeight = this.option.tooltip.rich[key].fontWeight ? this.option.tooltip.rich[key].fontWeight : this.option.tooltip.fontWeight\r\n                let fontSize = this.option.tooltip.rich[key].fontSize ? this.option.tooltip.rich[key].fontSize : this.option.tooltip.fontSize\r\n                let lineHeight = this.option.tooltip.rich[key].lineHeight ? this.option.tooltip.rich[key].lineHeight : this.option.tooltip.lineHeight\r\n                let fontFamily = this.option.tooltip.rich[key].fontFamily ? this.option.tooltip.rich[key].fontFamily : this.option.tooltip.fontFamily\r\n                this.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily\r\n                this.ctx.fillStyle = this.option.tooltip.rich[key].color ? this.option.tooltip.rich[key].color : this.option.tooltip.color;\r\n\r\n                this.ctx.fillText(text, param.x+20 + rowWidth, param.y+10 + totalHeigth)\r\n\r\n                rowWidth += this.ctx.measureText(text).width\r\n\r\n            }\r\n\r\n        })\r\n\r\n    } else {\r\n        // 普通文字\r\n        var default_lineHeight = this.option.tooltip.lineHeight\r\n        param.content.forEach((text, i) => {\r\n            totalHeigth += utils.formatPx(default_lineHeight,'option.tooltip.lineHeight or option.tooltip.rich[].lineHeight')\r\n            rowWidth = this.ctx.measureText(text).width\r\n            if (rowWidth > maxWidth) {\r\n                maxWidth = rowWidth\r\n            }\r\n        })\r\n        this.ctx.rect(param.x - 5, param.y, maxWidth + 10, totalHeigth);\r\n        this.ctx.fillStyle = '#00000088'\r\n        this.ctx.fill();\r\n        // 画完底部浮层 填上文字\r\n        this.ctx.fillStyle = this.option.tooltip.color;\r\n        totalHeigth = 0;\r\n        param.content.forEach((text, i) => {\r\n            totalHeigth += utils.formatPx(default_lineHeight,'option.tooltip.lineHeight  or option.tooltip.rich[].lineHeight')\r\n            this.ctx.fillText(text, param.x, param.y + totalHeigth)\r\n        })\r\n    }\r\n\r\n    this.ctx.restore();\r\n}\r\nDonutChart.prototype.drawLabel = function (content) {\r\n\r\n    if (!this.option.label.show) {\r\n        return false;\r\n    }\r\n    this.ctx.save()\r\n    this.ctx.rotate(utils.angelToRadian(90 + this.option.startAngle))\r\n    this.ctx.beginPath();\r\n    var default_font = this.option.label.fontStyle + \" \" + this.option.label.fontVariant + \" \" + this.option.label.fontWeight + \" \" + this.option.label.fontSize + (this.option.label.lineHeight ? \"/\" + this.option.label.lineHeight : '') + \" \" + this.option.label.fontFamily\r\n    this.ctx.font = default_font\r\n    this.ctx.fillStyle = this.option.label.color;\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.textBaseline = \"bottom\";\r\n    // tip_back 需要知道 左上角（x,y）width （maxWidth 最长的一行宽度） 和 height(每一行的行高总和)\r\n    // 判定是含富文本的还是普通文本 (计算宽高的方式有所区别) 当有一个富文本的时候，则普通文本也会被包装成对象 所以可选像下面这样判断\r\n    var totalHeigth = 0;\r\n    var rowWidth = 0;\r\n    var maxWidth = 0;\r\n    var maxLineHeight = 0;\r\n    var rowLineHeight = []\r\n    var rowWidths = [];\r\n    if (typeof content[0] == \"object\") {\r\n        // 部分含有富文本的情况\r\n        // 分行 可以得到 本行最大宽度 maxWidth \r\n        content.forEach((rowObj, i) => {\r\n            rowWidth = 0;\r\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\r\n            for (const key in rowObj) {\r\n                var text = rowObj[key]\r\n\r\n                if (!this.option.label.rich[key]) {\r\n                    this.option.label.rich[key] = {}\r\n                }\r\n                let fontStyle = this.option.label.rich[key].fontStyle ? this.option.label.rich[key].fontStyle : this.option.label.fontStyle\r\n                let fontVariant = this.option.label.rich[key].fontVariant ? this.option.label.rich[key].fontVariant : this.option.label.fontVariant\r\n                let fontWeight = this.option.label.rich[key].fontWeight ? this.option.label.rich[key].fontWeight : this.option.label.fontWeight\r\n                let fontSize = this.option.label.rich[key].fontSize ? this.option.label.rich[key].fontSize : this.option.label.fontSize\r\n                let lineHeight = this.option.label.rich[key].lineHeight ? this.option.label.rich[key].lineHeight : this.option.label.lineHeight\r\n                let fontFamily = this.option.label.rich[key].fontFamily ? this.option.label.rich[key].fontFamily : this.option.label.fontFamily\r\n                this.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily\r\n                this.ctx.fillStyle = this.option.label.rich[key].color ? this.option.label.rich[key].color : this.option.label.color;\r\n                rowWidth += this.ctx.measureText(text).width\r\n\r\n                if (utils.formatPx(lineHeight,'option.label.lineHeight or option.label.rich[].lineHeight') > maxLineHeight) {\r\n                    maxLineHeight = utils.formatPx(lineHeight,'option.label.lineHeight or option.label.rich[].lineHeight')\r\n                }\r\n            }\r\n            rowLineHeight[i] = maxLineHeight\r\n            rowWidths[i] = rowWidth\r\n            if (rowWidth > maxWidth) {\r\n                maxWidth = rowWidth\r\n            }\r\n\r\n        })\r\n\r\n        // 填写文字\r\n        this.ctx.translate(0, -eval(rowLineHeight.join(\"+\")) / 2)\r\n        totalHeigth = 0;\r\n        content.forEach((rowObj, i) => {\r\n\r\n            this.ctx.save()\r\n            this.ctx.translate(-rowWidths[i] / 2, 0)\r\n            this.ctx.textAlign = \"start\";\r\n            rowWidth = 0;\r\n            maxLineHeight = rowLineHeight[i]\r\n            totalHeigth += maxLineHeight\r\n            // 一行中的每小段 可以 得到 这一行的最大行高 maxLineHeight 和每小段 的 文本宽度\r\n            for (const key in rowObj) {\r\n                var text = rowObj[key]\r\n\r\n                if (!this.option.label.rich[key]) {\r\n                    this.option.label.rich[key] = {}\r\n                }\r\n                let fontStyle = this.option.label.rich[key].fontStyle ? this.option.label.rich[key].fontStyle : this.option.label.fontStyle\r\n                let fontVariant = this.option.label.rich[key].fontVariant ? this.option.label.rich[key].fontVariant : this.option.label.fontVariant\r\n                let fontWeight = this.option.label.rich[key].fontWeight ? this.option.label.rich[key].fontWeight : this.option.label.fontWeight\r\n                let fontSize = this.option.label.rich[key].fontSize ? this.option.label.rich[key].fontSize : this.option.label.fontSize\r\n                let lineHeight = this.option.label.rich[key].lineHeight ? this.option.label.rich[key].lineHeight : this.option.label.lineHeight\r\n                let fontFamily = this.option.label.rich[key].fontFamily ? this.option.label.rich[key].fontFamily : this.option.label.fontFamily\r\n                this.ctx.font = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + (lineHeight ? \"/\" + lineHeight : '') + \" \" + fontFamily\r\n                this.ctx.fillStyle = this.option.label.rich[key].color ? this.option.label.rich[key].color : this.option.label.color;\r\n\r\n\r\n                this.ctx.fillText(text, rowWidth, totalHeigth)\r\n                rowWidth += this.ctx.measureText(text).width\r\n            }\r\n\r\n\r\n\r\n            this.ctx.restore()\r\n        })\r\n\r\n    } else {\r\n        // 普通文字\r\n        var default_lineHeight = this.option.label.lineHeight\r\n        content.forEach((text, i) => {\r\n            totalHeigth += utils.formatPx(default_lineHeight,'option.label.lineHeight')\r\n            rowWidth = this.ctx.measureText(text).width\r\n            if (rowWidth > maxWidth) {\r\n                maxWidth = rowWidth\r\n            }\r\n        })\r\n        // 半总高 \r\n        var halfHeight = totalHeigth / 2\r\n        // 起始y\r\n        var startY = halfHeight - utils.formatPx(default_lineHeight,'option.label.lineHeight')\r\n\r\n        this.ctx.fillStyle = this.option.label.color;\r\n        totalHeigth = 0;\r\n        content.forEach((text, i) => {\r\n            this.ctx.fillText(text, 0, -startY + totalHeigth)\r\n            totalHeigth += utils.formatPx(default_lineHeight,'option.label.lineHeight')\r\n        })\r\n    }\r\n\r\n    this.ctx.restore();\r\n}\r\nDonutChart.prototype.init = function (callback, titleFlag) {\r\n    if (callback && typeof callback != 'function') {\r\n        throw 'init() 第一个参数必须是函数'\r\n    }\r\n    if (titleFlag && typeof titleFlag != 'boolean') {\r\n        throw 'labelCoverTitle 必须是boolean'\r\n    }\r\n    this.canvas.width = this.canvas.width\r\n    this.drawTitle(titleFlag)\r\n    this.ctx.translate(this.circleX, this.circleY);\r\n\r\n    this.ctx.rotate(utils.angelToRadian(-90 + this.option.startAngle))\r\n    this.ctx.lineWidth = this.lineWidth\r\n    this.ctx.lineCap = this.option.capType\r\n    var _this = this,\r\n     _arcArray = [],\r\n     _total = 0,\r\n     _lastAngel = 0;\r\n\r\n    this.data.forEach((item, index)=> {\r\n        _total += item.value\r\n        item.color = item.color || this.color[index]\r\n    })\r\n    if (_total == 0) {\r\n        this.drawArc(0, 360, this.option.backgroundArc)\r\n        return false;\r\n    }\r\n    if (this.option.type == \"gauge\") {\r\n        if(this.option.data[0].value>100){\r\n            throw 'this.option.data 里的 value 值不能大于100'\r\n            return false;\r\n        }\r\n        _total = this.option.max\r\n        this.drawArc(0, 360, this.option.backgroundArc)\r\n    }\r\n    \r\n    \r\n    this.data.sort(function(obj1,obj2){\r\n        var val1 = obj1.value\r\n        var val2 = obj2.value\r\n        if(val1 > val2){\r\n            return 1\r\n        }else if(val1<val2){\r\n            return -1\r\n        }else{\r\n            return 0 \r\n        }\r\n    })\r\n    \r\n    this.data.forEach((item, index) =>{\r\n        var _arr,_num;\r\n        if(item.value / _total == 1){\r\n            _num = '100'\r\n        }else{\r\n            _arr = (item.value / _total).toFixed(4).toString().slice(2).split('') \r\n            _arr.splice(2, 0, '.')\r\n            _num = _arr.join('')\r\n        }\r\n        \r\n        _arcArray[index] = {\r\n            index:index,\r\n            name: item.name,\r\n            value: item.value,\r\n            startAngle: _lastAngel,\r\n            endAngle: item.value / _total * 360 + _lastAngel,\r\n            percent: _num + '%',\r\n            color:item.color\r\n        }\r\n        _lastAngel = _arcArray[index].endAngle\r\n    })\r\n\r\n    _arcArray.forEach( (item, index) =>{                \r\n        this.drawArc(item.startAngle, item.endAngle, item.color)        \r\n    })\r\n    \r\n    for (var i = 0, l = _arcArray.length; i < l; i++) {\r\n        if (_arcArray[i].value != 0) {\r\n            this.drawArc(_arcArray[i].startAngle,_arcArray[i].startAngle+ 0.1, _arcArray[i].color)\r\n        }\r\n    }\r\n\r\n    // 绑定事件\r\n    this.canvas.onmousemove = function (e) {\r\n        \r\n        var x = e.offsetX - this.offsetWidth / 2\r\n        var y = e.offsetY - this.offsetHeight / 2\r\n        var x2 = x * x\r\n        var y2 = y * y\r\n        // 选中圆环\r\n        if (Math.sqrt(x2 + y2) > (_this.radius - _this.lineWidth) * _this.rate && Math.sqrt(x2 + y2) < (_this.radius + _this.lineWidth) * _this.rate) {\r\n            var angle = Math.atan2(x, -y) / (Math.PI / 180) > 0 ? Math.atan2(x, -y) / (Math.PI / 180) : 360 + Math.atan2(x, -y) / (Math.PI / 180)\r\n            // 选中某段，显示某段\r\n\r\n            for (var i = 0, l = _arcArray.length; i < l; i++) {\r\n                if (angle < _arcArray[i].endAngle) {\r\n                    _this.init(callback, _this.option.labelCoverTitle)\r\n                    \r\n                    _this.drawArc(_arcArray[i].startAngle, _arcArray[i].endAngle, _this.option.selectedStyle.color, _this.option.selectedStyle.borderWidth + _this.lineWidth)\r\n                    _this.drawArc(_arcArray[i].startAngle, _arcArray[i].endAngle, _arcArray[i].color, _this.lineWidth)\r\n\r\n                    // show label\r\n                    var content = []\r\n                    if (typeof _this.option.label.formatter == \"function\") {\r\n                        content = utils.formatterToObject(_this.option.label.formatter(_arcArray[i]))\r\n                    } else {\r\n                        content = [_arcArray[i].name, _arcArray[i].value]\r\n                    }\r\n                    _this.drawLabel(content)\r\n                    content = []\r\n                    if (typeof _this.option.tooltip.formatter == \"function\") {\r\n                        content = utils.formatterToObject(_this.option.tooltip.formatter(_arcArray[i]))\r\n                    } else {\r\n                        content = [_arcArray[i].name, _arcArray[i].value]\r\n                    }\r\n                    // show tip\r\n                    _this.drawTip({\r\n                        x: x / _this.rate,\r\n                        y: y / _this.rate,\r\n                        content: content\r\n                    })\r\n\r\n                    callback(_arcArray[i])\r\n                    break;\r\n                } else {\r\n                    _this.init(callback)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            _this.init(callback)\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/donut-chart.js","let class2type = {};\r\nlet toString = class2type.toString;\r\nlet hasOwn = class2type.hasOwnProperty;\r\nlet support = {};\r\nmodule.exports = {\r\n    // 百分比字符串转小数\r\n    formatPercent(param, name) {\r\n        if (typeof param == 'string' && param.indexOf('%') == param.length - 1) {\r\n            return param.slice(0, -1) / 100\r\n        }\r\n        throw name + \" 参数格式错误\"\r\n    },\r\n    // 字体大小字符串去px\r\n    formatPx(param, name) {\r\n        if (typeof param == 'string' && param.indexOf('px') == param.length - 2) {\r\n            return +param.slice(0, -2)\r\n        }\r\n        throw name + \" 参数格式错误\"\r\n    },\r\n    // 富文本格式\"{a|水电费}\"=》 object {a:水电费}\r\n    formatterToObject(param) {\r\n\r\n        if (param === undefined) {\r\n            return false;\r\n        }\r\n        if (typeof param != \"string\") {\r\n            throw \"formatter 必须返回一个字符串\"\r\n        }\r\n        try {\r\n            var rowTexts = param.split('\\n')\r\n            var textObjs = []\r\n            // 富文本格式\r\n            \r\n            if ((/\\{(\\w+)\\|([\\s\\S]*?)\\}/g.test(param))) {\r\n                rowTexts.forEach((element,index) => {\r\n\r\n                    var str = ''\r\n                    var arr = element.replace(/\\{(\\w+)\\|([\\s\\S]*?)\\}/g, ',\"$1\":\"$2\",').split(',')\r\n                    \r\n                    arr.forEach((e,i)=>{\r\n                        if(e.indexOf(':')>-1){\r\n                            str += e+','\r\n                        }else{\r\n                            str +='\"default_'+i+'\":\"' + e + '\",'\r\n                        }\r\n                    })\r\n                    \r\n                    // 得到要渲染的对象\r\n                    textObjs.push(JSON.parse(\"{\" + str.slice(0, -1) + \"}\"))\r\n                    \r\n                });\r\n                // 普通格式\r\n            } else {\r\n                rowTexts.forEach(element => {\r\n                    textObjs.push(element)\r\n                });\r\n            }\r\n            return textObjs\r\n        } catch (error) {\r\n            throw \"formatter 的格式不正确\"\r\n        }\r\n    },\r\n\r\n    // 角度转弧度\r\n    angelToRadian(param,name) {\r\n        if(isNaN(param)){\r\n            throw name+'不是一个有效数字'\r\n        }        \r\n        return param * Math.PI / 180\r\n    },\r\n    extend() {\r\n        var src, copyIsArray, copy, name, options, clone,\r\n            target = arguments[0] || {},\r\n            i = 1,\r\n            length = arguments.length,\r\n            deep = false;\r\n\r\n        // Handle a deep copy situation\r\n        if (typeof target === \"boolean\") {\r\n            deep = target;\r\n\r\n            // skip the boolean and the target\r\n            target = arguments[i] || {};\r\n            i++;\r\n        }\r\n\r\n        // Handle case when target is a string or something (possible in deep copy)\r\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\r\n            target = {};\r\n        }\r\n\r\n        if (i === length) {\r\n            target = this;\r\n            i--;\r\n        }\r\n\r\n        for (; i < length; i++) {\r\n\r\n            // Only deal with non-null/undefined values\r\n            if ((options = arguments[i]) != null) {\r\n\r\n                // Extend the base object\r\n                for (name in options) {\r\n                    src = target[name];\r\n                    copy = options[name];\r\n\r\n                    // Prevent never-ending loop\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Recurse if we're merging plain objects or arrays\r\n                    if (deep && copy && (this.isPlainObject(copy) ||\r\n                        (copyIsArray = this.isArray(copy)))) {\r\n\r\n                        if (copyIsArray) {\r\n                            copyIsArray = false;\r\n                            clone = src && this.isArray(src) ? src : [];\r\n\r\n                        } else {\r\n                            clone = src && this.isPlainObject(src) ? src : {};\r\n                        }\r\n\r\n                        // Never move original objects, clone them\r\n                        target[name] = this.extend(deep, clone, copy);\r\n\r\n                        // Don't bring in undefined values\r\n                    } else if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the modified object\r\n        return target;\r\n    },\r\n    isFunction(param) {\r\n        return typeof param == 'function'\r\n    },\r\n    isPlainObject(obj) {\r\n        var key;\r\n\r\n        // Must be an Object.\r\n        // Because of IE, we also have to check the presence of the constructor property.\r\n        // Make sure that DOM nodes and window objects don't pass through, as well\r\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n\r\n            // Not own constructor property must be Object\r\n            if (obj.constructor &&\r\n                !hasOwn.call(obj, \"constructor\") &&\r\n                !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\r\n                return false;\r\n            }\r\n        } catch (e) {\r\n\r\n            // IE8,9 Will throw exceptions on certain host objects #9897\r\n            return false;\r\n        }\r\n\r\n        // Support: IE<9\r\n        // Handle iteration over inherited properties before own properties.\r\n        if (!support.ownFirst) {\r\n            for (key in obj) {\r\n                return hasOwn.call(obj, key);\r\n            }\r\n        }\r\n\r\n        // Own properties are enumerated firstly, so to speed up,\r\n        // if last one is own, then all properties are own.\r\n        for (key in obj) { }\r\n\r\n        return key === undefined || hasOwn.call(obj, key);\r\n    },\r\n    type(obj) {\r\n        if (obj == null) {\r\n            return obj + \"\";\r\n        }\r\n        return typeof obj === \"object\" || typeof obj === \"function\" ?\r\n            class2type[toString.call(obj)] || \"object\" :\r\n            typeof obj;\r\n    },\r\n    isWindow(obj) {\r\n        /* jshint eqeqeq: false */\r\n        return obj != null && obj == obj.window;\r\n    },\r\n    isArray(obj) {\r\n        return this.type(obj) === \"array\";\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}